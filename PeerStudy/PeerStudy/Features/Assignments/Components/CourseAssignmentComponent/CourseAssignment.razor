@using PeerStudy.Core.Models.Assignments

<div>
    <MatAccordion>
        <MatExpansionPanel @bind-Expanded="expanded">
            <MatExpansionPanelSummary Style="padding: 10px;">
                <MatExpansionPanelHeader>
                    <div class="panel-header">
                        @Assignment.Title
                    </div>
                </MatExpansionPanelHeader>
            </MatExpansionPanelSummary>
            <MatExpansionPanelDetails>

                @if (!IsReadOnly)
                {
                    <div class="details">
                        <div class="align-to-left">
                            <div class="deadline">
                                @Assignment.Deadline
                            </div>
                            <div class="points">
                                @Assignment.Points points
                            </div>
                        </div>
                        <div class="delete-assignment">
                            <MatButton Icon="@MatIconNames.Delete" OnClick="DeleteAssignment"></MatButton>
                        </div>
                    </div>
                }
                <DataGrid TItem="GradeAssignmentModel"
                          Data="@Assignment.Students"
                            Responsive
                            ShowPager
                            ShowPageSizes
                            Editable
                          RowUpdated="GradeAssignment"
                          CommandMode="DataGridCommandMode.ButtonRow"
                          @bind-SelectedRow="@selectedRow"
                          EditMode="DataGridEditMode.Inline"
                          PagerPosition="DataGridPagerPosition.Bottom"
                          PagerOptions="new(){ ButtonSize=Size.Small }">
                    <DataGridColumns>
                        <DataGridCommandColumn />
                        <DataGridColumn Field="@nameof(GradeAssignmentModel.StudentName)" Caption="Name" />
                        <DataGridColumn Field="@nameof(GradeAssignmentModel.Points)" Caption="Points" Editable>
                            <EditTemplate>
                                <NumericEdit TValue="int" Value="@((int)context.CellValue)" ValueChanged="@( v => context.CellValue = v)" />
                            </EditTemplate>
                        </DataGridColumn>
                    </DataGridColumns>

                    <ButtonRowTemplate>
                        @if (!IsReadOnly)
                        {
                            <Button Color="Color.Primary"
                                Disabled="(selectedRow == null || selectedRow.HasBeenGraded)"
                                Clicked="context.EditCommand.Clicked"
                                Style="margin-right: 10px;">
                                Grade
                            </Button>
                        }
                        <Button Color="Color.Primary"
                                Clicked="ViewSubmittedWork">
                            View work
                        </Button>
                    </ButtonRowTemplate>

                    <PageButtonTemplate>
                        <Span TextColor="TextColor.Success">
                            @context.PageNumber
                        </Span>
                    </PageButtonTemplate>
                    <NextPageButtonTemplate><Icon Name="IconName.StepForward" TextColor="TextColor.Success" /></NextPageButtonTemplate>
                    <PreviousPageButtonTemplate><Icon Name="IconName.StepBackward" TextColor="TextColor.Success" /></PreviousPageButtonTemplate>
                    <LastPageButtonTemplate><Icon Name="IconName.Forward" TextColor="TextColor.Success" /></LastPageButtonTemplate>
                    <FirstPageButtonTemplate><Icon Name="IconName.Backward" TextColor="TextColor.Success" /></FirstPageButtonTemplate>
                    <TotalItemsTemplate><Badge Color="Color.Success">@context.TotalItems total items</Badge></TotalItemsTemplate>
                    <TotalItemsShortTemplate><Badge Color="Color.Success">@context.TotalItems</Badge></TotalItemsShortTemplate>
                    <ItemsPerPageTemplate></ItemsPerPageTemplate>
                    <PageSelectorTemplate>
                        <Select TextColor="TextColor.Success" @bind-SelectedValue="@context.CurrentPage" Size="Size.Small">
                            @for (int i = context.FirstVisiblePage; i <= context.LastVisiblePage; ++i)
                            {
                                var pageNumber = i;
                                <SelectItem Value="@pageNumber">@pageNumber</SelectItem>
                            }
                        </Select>
                    </PageSelectorTemplate>
                    <PageSizesTemplate>
                        <Select TextColor="TextColor.Success" @bind-SelectedValue="@context.CurrentPageSize" Size="Size.Small">
                            @foreach (var pageSize in context.PageSizes)
                            {
                                <SelectItem Value="@pageSize">@pageSize</SelectItem>
                            }
                        </Select>
                    </PageSizesTemplate>
                </DataGrid>
            </MatExpansionPanelDetails>
        </MatExpansionPanel>
    </MatAccordion>
</div>

<ConfirmationPopup IsOpen="showConfirmationPopup"
                   Title="@confirmationPopupTitle"
                   Message="@deleteAssignmentConfirmationMessage"
                   OnCancel="CancelDeleteAssignmentHandler"
                   OnConfirm="DeleteAssignmentHandler">
</ConfirmationPopup>
