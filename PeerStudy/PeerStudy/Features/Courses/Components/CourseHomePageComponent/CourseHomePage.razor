@using PeerStudy.Core.Models.Resources
@using PeerStudy.Features.Assignments.Components.CreateAssignmentComponent
@using PeerStudy.Features.CourseUnits.Components.CourseUnitsListComponent
@using PeerStudy.Features.CourseUnits.Components.CreateUpdateCourseUnitComponent
@using PeerStudy.Features.Resources.Components.ResourcesListComponent
@using PeerStudy.Features.StudyGroups.Components.CreateStudyGroupsComponent

@page "/{teacherId:guid}/courses/{courseId:guid}/home"
@page "/{studentId:guid}/my-courses/{courseId:guid}/home"

@attribute [Authorize]
@inherits PeerStudyComponentBase

<Header Title="@courseDetails?.Title"></Header>

<AuthorizeView Roles="Teacher">
    <div>
        @if (!isReadOnly && !isLoading)
        {
            <MatButton OnClick="ToggleShowCreateMenu">
                <img src="/images/icons8-plus.svg" />
            </MatButton>

            @if (showCreateMenu)
            {
                <div class="create-menu">
                    <div class="create-menu-btn">
                        <MatButton Style="@menuButtonsStyles" OnClick="ShowCourseUnitDialog">Course unit</MatButton>
                    </div>
                    <div class="create-menu-btn">
                        @if (courseDetails != null && !courseDetails.HasStudyGroups)
                        {
                            <MatButton Style="@menuButtonsStyles" OnClick="ShowCreateGroupsDialog">Study groups</MatButton>
                        }
                    </div>
                </div>
            }
        }
    </div>

    <CreateUpdateCourseUnit IsVisible="showCourseUnitDialog"
                            CourseUnitModel="courseUnitModel"
                            OnCancel="CancelCreateUpdateCourseUnit"
                            OnSave="SaveCourseUnit">
    </CreateUpdateCourseUnit>

    @if (isEditCourseUnitEnabled)
    {
        <CreateUpdateCourseUnit IsVisible="showCourseUnitDialog"
                            CourseUnitModel="courseUnitModel"
                            IsEditModeEnabled=true
                            OnCancel="CancelCreateUpdateCourseUnit"
                            OnSave="UpdateCourseUnit">
        </CreateUpdateCourseUnit>
    }

    <UploadFiles IsVisible="showUploadFileDialog"
                 OnCancel="CloseUploadFileDialog"
                 OnUpload="UploadFiles">
    </UploadFiles>

    <CreateStudyGroups IsVisible="showCreateStudyGroupsDialog"
                       DropDownItems="studyGroupsNoMembers"
                       OnCancel="CancelCreateStudyGroups"
                       OnConfirm="CreateGroups">
    </CreateStudyGroups>

    <CreateAssignment AssignmentModel="assignmentModel"
                      IsVisible="showAddAssigmentDialog"
                      StudyGroups="studyGroupsDropdownItems"
                      OnCancel=CancelCreateAssignment
                      OnConfirm="SaveAssignment">
    </CreateAssignment>

    <CourseUnitsList CourseUnits="courseUnits"
                     IsLoading="isLoading"
                     CurrentUserId="currentUserId"
                     IsReadOnly="isReadOnly"
                     OnDelete="ShowCourseUnitDeleteConfirmationPopup"
                     OnRename="ShowEditCourseUnitDialog"
                     OnUploadFiles="ShowUploadFileDialog"
                     OnDeleteResource="ShowDeleteResourcePopup"
                     OnAddAssignment="ShowCreateAssignmentDialog"
                     OnViewAssignments="ViewAssignments">
    </CourseUnitsList>

    <ConfirmationPopup IsOpen="isDeleteCourseUnitPopupVisible"
                       Message="@deleteCourseUnitPopupMessage"
                       Title="@deleteCourseUnitPopupTitle"
                       OnCancel="CancelDeleteCourseUnit"
                       OnConfirm="DeleteCourseUnit">
    </ConfirmationPopup>

    <ConfirmationPopup IsOpen="isDeleteResourcePopupVisible"
                       Message="@deleteResourcePopupMessage"
                       Title="@deleteResourcePopupTitle"
                       OnCancel="CancelDeleteResource"
                       OnConfirm="DeleteResource">
    </ConfirmationPopup>
</AuthorizeView>



<AuthorizeView Roles="Student">
    <CourseUnitsList CourseUnits="courseUnits"
                     IsLoading="isLoading"
                     CurrentUserId="currentUserId"
                     IsReadOnly="isReadOnly"
                     OnClickedLockIcon="DisplayUnlockCourseUnitDialog">
    </CourseUnitsList>

    <ConfirmationPopup
        IsOpen="showUnlockCourseUnitDialog" 
        Message="@unlockCourseUnitMessage"
        Title="@unlockCourseUnitPopupTitle"
        IsConfirmButtonDisabled="isConfirmUnlockUnitButtonDisabled"
        OnCancel="CancelUnlockCourseUnit" 
        OnConfirm="UnlockCourseUnit">
    </ConfirmationPopup>
</AuthorizeView>
