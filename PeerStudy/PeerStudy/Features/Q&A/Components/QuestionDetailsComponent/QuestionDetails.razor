@using PeerStudy.Features.Q_A.Components.AnswerComponent
@using PeerStudy.Features.Q_A.Components.TagsListComponent
@using PeerStudy.Features.Q_A.Components.VotingComponent

@page "/questions/{questionId:guid}"
@inherits PeerStudyComponentBase
@attribute [Authorize(Roles = "Student")]

<Loading IsLoading="isLoading" HasData="@(!isLoading && questionDetails != null)">
    <div class="header">
        <h3>@questionDetails.Title</h3>
        <span class="posted-at">@questionDetails.AuthorName posted on: @questionDetails?.CreatedAt</span>
    </div>
    <hr />

    <div class="question-content">
        <div>
            <PeerStudyTextEditor HtmlContent="@questionDetails?.HtmlDescription"
                                 IsReadOnly="isEditQuestionDisabled"
                                 OnSave="UpdateQuestion"
                                 OnCancel="CancelUpdateQuestion">
            </PeerStudyTextEditor>
        </div>

        <TagsList Tags="questionDetails?.Tags"></TagsList>

        @if (questionDetails?.AuthorId == currentUserId && isEditQuestionDisabled)
        {
            <div class="action-buttons">
                <MatButton Icon="@MatIconNames.Edit" OnClick="EnableEditQuestion"></MatButton>
                <MatButton Icon="@MatIconNames.Delete" OnClick="ShowDeleteQuestionPopup"></MatButton>
            </div>
        }
        else if (questionDetails?.AuthorId != currentUserId)
        {
            if (!showAddAnswerEditor)
            {
                <MatButton Class="submit-button" Raised=true OnClick="@(() => showAddAnswerEditor = true)">Reply</MatButton>
            }

            <Voting NoDownvotes="questionDetails.NoDownvotes"
                    NoUpvotes="questionDetails.NoUpvotes"
                    Votes="questionDetails.Votes"
                    CurrentUserId="currentUserId"
                    OnUpvote="UpvoteQuestion"
                    OnDownvote="DownvoteQuestion">
            </Voting>
        }

        @if (showAddAnswerEditor)
        {
            <PeerStudyTextEditor Placeholder="Type your answer here..."
                             OnSave="SaveAnswer"
                             OnCancel="CancelAddAnswer">
            </PeerStudyTextEditor>
        }

        <div class="answers">
            <h4>@questionDetails.Answers.Count() Answers</h4>
            @foreach (var answer in questionDetails.Answers)
            {
                <AnswerDetails Answer="answer"
                           CurrentUserId="currentUserId"
                           OnDelete="ShowDeleteAnswerPopup"
                           OnEdit="EnableEditAnswer"
                           OnSave="SaveUpdatedAnswer"
                           OnCancel="DisableAnswerEditMode"
                           OnUpvote="UpvoteAnswer"
                           OnDownvote="DownvoteAnswer">
                </AnswerDetails>
            }
        </div>
    </div>

    <ConfirmationPopup Title="Delete Question"
                       Message="@deleteQuestionConfirmationMessage"
                       IsOpen="showDeleteQuestionConfirmationPopup"
                       OnCancel="@(() => showDeleteQuestionConfirmationPopup = false)"
                       OnConfirm="DeleteQuestion">
    </ConfirmationPopup>

    <ConfirmationPopup Title="Delete Answer"
                       Message="@deleteAnswerConfirmationMessage"
                       IsOpen="showDeleteAnswerConfirmationPopup"
                       OnCancel="@(() => showDeleteAnswerConfirmationPopup = false)"
                       OnConfirm="DeleteAnswer">
    </ConfirmationPopup>
</Loading>
