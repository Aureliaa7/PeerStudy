@using PeerStudy.Features.Resources.Components.CourseResourceComponent

<div class="course-unit">
    <div class="course-unit-header">
        <AuthorizeView Roles="Teacher">
            <div class="title">
                <b>@CourseUnit?.Title</b>
                <div class="course-unit-availability">
                    @if (!CourseUnit.IsAvailable)
                    {
                        <div>
                            <MatButton Style="@defaultCursor"
                                   Icon="@MatIconNames.Lock">
                            </MatButton>
                        </div>
                    }
                    else
                    {
                        <div>
                            <MatButton Style="@defaultCursor" Icon="@MatIconNames.Lock_open">
                            </MatButton>
                        </div>
                    }
                </div>
            </div>

            @if (IsMenuIconVisible)
            {
                <div class="menu">
                    <MatButton Style="@menuButtonStyles" Icon="@MatIconNames.Menu" OnClick="ToggleMenuOptions"></MatButton>
                </div>

                @if (showMenuOptions)
                {
                    <div class="menu-options">
                        <div class="create-menu-btn">
                            <MatButton Style="@menuButtonsStyles" OnClick="UploadFiles">Upload file</MatButton>
                        </div>
                        <div class="create-menu-btn">
                            <MatButton Style="@menuButtonsStyles" OnClick="Delete">Delete</MatButton>
                        </div>
                        <div class="create-menu-btn">
                            <MatButton Style="@menuButtonsStyles" OnClick="Rename">Rename</MatButton>
                        </div>
                        <div class="create-menu-btn">
                            <MatButton Style="@menuButtonsStyles" OnClick="AddAssignment">Create assignment</MatButton>
                        </div>
                        <div class="create-menu-btn">
                            <MatButton Style="@menuButtonsStyles" OnClick="ViewAssignments">View assignments</MatButton>
                        </div>
                    </div>
                }
            }
        </AuthorizeView>

        <AuthorizeView Roles="Student">
            <div>
                <div class="title @(!CourseUnit.IsAvailable ? "grey-out" : "")">
                    <b>@CourseUnit?.Title</b>
                </div>

                @if (!CourseUnit.IsAvailable)
                {
                    if (CourseUnit.IsActive)
                    {
                        <div class="lock-icon">
                            <MatButton Icon="@MatIconNames.Lock"
                               OnClick="HandleClickedLockIcon">
                            </MatButton>
                        </div>
                    }
                    else
                    {
                        <div class="lock-icon">
                            <MatButton Style="@defaultCursor"
                               Icon="@MatIconNames.Lock">
                            </MatButton>
                        </div>
                    }
                }
                else
                {
                    <div class="lock-icon">
                        <MatButton Style="@defaultCursor" Icon="@MatIconNames.Lock_open">
                        </MatButton>
                    </div>
                }
            </div>
        </AuthorizeView>
    </div>


    <AuthorizeView Roles="Teacher">
        <div class="course-unit-elements">
            @if (CourseUnit != null && CourseUnit.Resources != null && CourseUnit.Resources.Any())
            {
                @foreach (var resource in CourseUnit.Resources)
                {
                    <div>
                        <CourseResource IsReadOnly="@(!CourseUnit.IsActive)"
                                OnDeleteResource="DeleteResource"
                                CurrentUserId="CurrentUserId"
                                ResourceDetails="resource">
                        </CourseResource>
                    </div>
                }
            }
        </div>
    </AuthorizeView>

    <AuthorizeView Roles="Student">
        @if (CourseUnit.IsAvailable)
        {
            <div class="course-unit-elements">
                @if (CourseUnit != null && CourseUnit.Resources != null && CourseUnit.Resources.Any())
                {
                    @foreach (var resource in CourseUnit.Resources)
                    {
                        <div>
                            <CourseResource IsReadOnly="@(!CourseUnit.IsActive)"
                                OnDeleteResource="DeleteResource"
                                CurrentUserId="CurrentUserId"
                                ResourceDetails="resource">
                            </CourseResource>
                        </div>
                    }
                }
            </div>
        }
    </AuthorizeView>
</div>  