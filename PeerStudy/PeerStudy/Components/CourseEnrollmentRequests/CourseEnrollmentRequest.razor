@using PeerStudy.Core.Models.CourseEnrollments

@if (IsLoading)
{
    <div class="center-elements">
        <MatProgressCircle Indeterminate="@IsLoading" Size="MatProgressCircleSize.Large" />
    </div>
}
else if (!IsLoading && (Requests == null || !Requests.Any()))
{
    <NotFound Message="@NoRequestsMessage"></NotFound>
}
else
{
    @if (DisplayActionButtons)
    {
        <div>
            <MatButton Disabled="AreButtonsDisabled()" Style="display: inline-block;" OnClick="ApproveRequests" Raised=true>Approve</MatButton>
            <MatButton Disabled="AreButtonsDisabled()" Style="display: inline-block;" OnClick="RejectRequests">Reject</MatButton>
        </div>
    }

    <DataGrid TItem="CourseEnrollmentRequestDetailsModel"
          Data="@Requests"
          @bind-SelectedRow="@selectedRequest"
          SelectionMode="DataGridSelectionMode.Multiple"
          @bind-SelectedRows="selectedRequests"
          Responsive
          ShowPager
          ShowPageSizes
          PagerPosition="DataGridPagerPosition.Bottom"
          PagerOptions="new(){ ButtonSize=Size.Small }">
        <DataGridColumns>
            <DataGridMultiSelectColumn Width="30px"></DataGridMultiSelectColumn>
            <DataGridCommandColumn />
            <DataGridColumn Field="@nameof(CourseEnrollmentRequestDetailsModel.StudentName)" Caption="Student" />
            <DataGridColumn Field="@nameof(CourseEnrollmentRequestDetailsModel.CreatedAt)" Caption="Created At" />
        </DataGridColumns>

        <PageButtonTemplate>
            <Span TextColor="TextColor.Success">
                @context.PageNumber
            </Span>
        </PageButtonTemplate>
        <NextPageButtonTemplate><Icon Name="IconName.StepForward" TextColor="TextColor.Success" /></NextPageButtonTemplate>
        <PreviousPageButtonTemplate><Icon Name="IconName.StepBackward" TextColor="TextColor.Success" /></PreviousPageButtonTemplate>
        <LastPageButtonTemplate><Icon Name="IconName.Forward" TextColor="TextColor.Success" /></LastPageButtonTemplate>
        <FirstPageButtonTemplate><Icon Name="IconName.Backward" TextColor="TextColor.Success" /></FirstPageButtonTemplate>
        <TotalItemsTemplate><Badge Color="Color.Success">@context.TotalItems total items</Badge></TotalItemsTemplate>
        <TotalItemsShortTemplate><Badge Color="Color.Success">@context.TotalItems</Badge></TotalItemsShortTemplate>
        <ItemsPerPageTemplate></ItemsPerPageTemplate>
        <PageSelectorTemplate>
            <Select TextColor="TextColor.Success" @bind-SelectedValue="@context.CurrentPage" Size="Size.Small">
                @for (int i = context.FirstVisiblePage; i <= context.LastVisiblePage; ++i)
                    {
                        var pageNumber = i;
                        <SelectItem Value="@pageNumber">@pageNumber</SelectItem>
                    }
                </Select>
            </PageSelectorTemplate>
            <PageSizesTemplate>
                <Select TextColor="TextColor.Success" @bind-SelectedValue="@context.CurrentPageSize" Size="Size.Small">
                    @foreach (var pageSize in context.PageSizes)
                    {
                        <SelectItem Value="@pageSize">@pageSize</SelectItem>
                    }
                </Select>
            </PageSizesTemplate>
        </DataGrid>
}
